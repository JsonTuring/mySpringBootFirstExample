<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <jmxConfigurator/>
    <property name="LOG_FILE_NAME" value="cdcapi" />
    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${catalina.base:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/logs/}${LOG_FILE_NAME}}"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d %p (%file:%line\)- %m%n</pattern>
        </encoder>
    </appender>

    <appender name="FILELOG"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_FILE}.log</File>

        <!-- 每天生成一个日志文件，保存60天的日志文件
                 - 如果隔一段时间没有输出日志，前面过期的日志不会被删除，
                - 只有再重新打印日志的时候，会触发删除过期日志的操作。
          -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>


        <encoder>
            <pattern>
                %d %p (%file:%line\)- %m%n
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 异步输出 -->
    <appender name ="ASYNCFILELOG" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="FILELOG"/>
    </appender>


    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="ASYNCFILELOG" />
    </root>


</configuration>